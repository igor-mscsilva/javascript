Mostrar caixa de mensagem no site "Alerta":
window.alert('Minha primeira mesagem');

Abrir caixa de texto com pergunta no site "Confirmação":
window.confirm('Esta gostando de JS?');

Abrir caixa de mensagem no site com pergunta "Perguntas":
window.prompt('Qual é seu nome?');

=========Tipo de comentarios no JS==========

 // - uma unica linha
/* */ - mais de uma linha de código
============================================

Sinal de (=)  significa recebe.

Sinal de (==) 

null - nula

3 formas de utilizar string - ("") ('') (´´)

variaveis - Var ou Let

Tipos de identificadores - (letra) ($) (_), não podem começar com numeros

Ctrl + L - no terminal ele limpa as informações na tela.

Tipos de dados - (Number) (String) (boolean)

Typeof - Mostrar qual o tipo de dado consta na variavel.

Converção de string para numero:
Number.perseInt(n) ou Number.perseFloat(n)
Ou somente Number
//Usar template string - `Eu estou aprendendo ${s}`

s.length // quantos caracteres a string tem

s.toUpperCase() // tudo para 'MAIÚSCULAS'

s.toLowerCase() // tudo para 'minúsculas'

toFixed(2) - deixar o numero com 2 casas decimais.

toFixed(2).replace('.' , ',') - trocar o (.) para (,)

toLocaleString - mostra os valores na localização desejada.

Exemplo:
 n1.toLocaleString('pt-BR', {style: 'currency', currency: 'BRL'})
'R$ 1.545,50'
> n1.toLocaleString('pt-BR', {style: 'currency', currency: 'USD'})
'US$ 1.545,50'
> n1.toLocaleString('pt-BR', {style: 'currency', currency: 'EUR'})
'€ 1.545,50'

Tipo de operadores ARITMÉTICOS
 5 (+) 2 = 7 - soma
 5 (-) 2 = 3 - subtração
 5 (*) 2 = 10 - multiplicação
 5 (/) 2 = 2.5 - divisão
 5 (%) 2 = 1 - seria o resto da conta - n%2== 0 - "n dividio por 2 resta 0
 5 (**) 2 = 25 - seria ao quadrado

Ordem de Precedência

1° ()
2° **
3° * / %
4° + -

Operadores Relacionais

> - maior
< - menor
>= - maior ou igual
<= - menor ou igual
== - igual
!= - diferente

Operadores Lógicos

! - negação não
&& - conjunção ou (e) logico
|| - disjunção ou (ou) logico

Precedência - ordem de resolução

() ** / ...  - aritimeticos
> < >=       - relacionais
! && ||	     - logicos

Operador ternario

? :
=  - recebe
== - igual
=== - identico

DOOM - Document Object Model

id = #
class = .

Técnicas para acessar o DOM

TagName
ID
Name
ClassName
querySelector

===TIPOS DE CONDIÇÕES===

Simples : if (condição){
		[true]


Composta : if (condição){
		[true]
	   } else{
		[false]

Aninhada : if (condição){
		[true]
	   } elseif{
		[true]
	   }else{
	        [false]

Switch(expressão){
     case valor 1:
	 [true]
	 break : break é o obrigatorio quando usa switch case, senão ele ira fazer todos os valores a baixo da condição.

     case valor 2:
	 [true]
	 break

     case valor 3:
	 [true]
	 break


     default:

}
 =====Estrutura de repetição=====
while = enquanto
 do  = faça

----------------------------
  Teste logico no Inicio

while (condição){
	[bloco]
}

----------------------------
  Teste logico no final

do{
 [bloco]
}while(condição)

----------------------------
  Repetição com teste lógico

for(inicio; teste; incremento){
   [bloco]

}
===========================
Exemplo :

// === Estrutura FOR ===

//  Variavel  / Teste / Incremento 
for(var c = 1; c <= 6; c++){
    console.log(`Numero: ${c}`)
}
==========================
	array / vetor / variavel composta

Vetor é uma variavel com varios espaços, e cada espaço
tem um indice que o identifica, começando pelo 0

===Formas de adicionar um numero em array===

var num = [5, 7, 9]

num[3] = 6 - ira adionar mais um numero

num.push(7) - ira adicionar automaticamente o numero no final

num.length - mostrar quantas casas tem preenchidas

num.sort() - colocar os numeros em ordem crescente.

for - para

in - dentro ou em

num.indexOf(7) - buscar o valor 7 caso tenha, se não tiver ele retorna -1

===========Função===============

Toda função tem CHAMADA / PARÂMETRO / AÇÃO e RETORNO

FUNÇÕES :  São ações executadas assim que são CHAMADAS
ou em decorrência de algum EVENTO.

Uma FUNÇÃO pode receber PARÂMETROS e retornar um RESULTADO.

================================

window = seria a pagina inteira, toda janela do navegador.

Document = se referindo ao arquivo "Página"


Join - junta elementos

lista.pop(); - (pop)remove o ultimo item do array

lista.shift(); - (shift)remove o primeiro item do array
		